import themidibus.*;
float cc[] = new float[256];
MidiBus myBus;

Mover[] movers = new Mover[40];




void setup() {
  size(2700, 1800);
  background(255);

  MidiBus.list();
  myBus = new MidiBus(this, 0, 1);

  for (int i = 0; i < movers.length; i++) {
    movers[i] = new Mover(random(1, 55), random(width), random(height));
  }
}

void draw() {

  for (int i = 0; i < movers.length; i++) {
    for (int j = 0; j < movers.length; j++) {
      if (i != j) {
        PVector force = movers[j].attract(movers[i]);
        movers[i].applyForce(force);
      }
    }
    movers[i].update();
    movers[i].display();
  }
}


void controllerChange(int channel, int number, int value) {
  println(number);
  cc[number] = map(value, 0, 127, 0, 1);
}

void mousePressed() {
  saveFrame("nOc_exp_scrsht-####.png");
}
class Mover {

  PVector location;
  PVector velocity;
  PVector acceleration;
  float G;
  float mass;
  float dc;
  Mover(float m, float x, float y) {
    mass = m;
    location = new PVector(x, y);
    velocity = new PVector(0, 0);
    acceleration = new PVector(0, 0);
    G = 1;
  }
   PVector attract(Mover m) {
    PVector force = PVector.sub(location, m.location);   
    float d = force.mag();                          
    d = constrain(d, 5.0, 25.0);                        
    force.normalize();                                 
    float strength = (G * mass * m.mass) / (d * d);     
    force.mult(strength/10);                    
    return force;
   
  }

  void applyForce(PVector force) {
    PVector f = PVector.div(force, mass);
    acceleration.add(f);
  }

  void update() {
    velocity.add(acceleration);
    location.add(velocity);
    velocity.limit(5);
    acceleration.mult(0);
    if (location.x > width) {
      location.x = 0;
    } else if (location.x < 0) {
      location.x = width;
    }

    if (location.y > height) {
      location.y = 0;
    } else if (location.y < 0) {
      location.y = height;
    }
  }

  void display() {
    stroke(0,111);
    strokeWeight(1);
   
    fill(122);
    ellipse(location.x, location.y, mass*12, mass*12);  
  }
}
